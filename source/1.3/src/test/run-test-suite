#! /bin/sh
# $Id$

MY_NAME=`basename $0`
MY_PATH=`dirname $0`

SHELLS='/bin/sh /bin/bash /bin/dash /bin/ksh /bin/pdksh'

# load common unit test functions
. "${MY_PATH}/test-functions.inc"

usage()
{
  echo "usage: ${MY_NAME} -s shell(s) -t test(s)"
}

# process command line flags
while getopts 'hs:t:' opt; do
  case ${opt} in
    h) usage; exit 0 ;;
    s) shells=${OPTARG} ;;
    t) tests=${OPTARG} ;;
    *) usage; exit 1 ;;
  esac
done
shift `expr ${OPTIND} - 1`

# fill shells and/or tests
[ -z "${shells}" ] && shells=${SHELLS}
if [ -z "${tests}" ]; then
  tests=test[A-Z]*
fi

# error checking
if [ -z "${tests}" ]; then
  tf_error 'no tests found to run; exiting'
  exit 1
fi

cat <<EOF
#------------------------------------------------------------------------------
# System data
#

EOF

# output system data
echo "$ date"
date

echo "$ uname -a"
uname -a

echo
for shell in ${shells}; do
  # check for existance of shell
  if [ ! -x ${shell} ]; then
    echo "${MY_NAME}:WARN unable to run tests with the ${shell} shell"
    continue
  fi

  cat <<EOF

#------------------------------------------------------------------------------
# Running the test suite with ${shell}
#
EOF

  case `basename ${shell}` in
    bash) echo; ${shell} --version; ;;
    dash) ;;
    ksh)
      version=`${shell} --version 2>&1`
      exitVal=$?
      if [ ${exitVal} -eq 2 ]; then
        echo
        echo "${version}"
      fi
      ;;
    pdksh) ;;
    zsh) ;;
  esac

  for suite in ${tests}; do
    if [ -x ${suite} ]; then
      # execute the test
      suiteName=`expr "${suite}" : 'test\(.*\)'`
      echo
      echo "--- Executing the '${suiteName}' test suite ---" >&2
      ( exec ${shell} ./${suite} )
    fi
  done
done

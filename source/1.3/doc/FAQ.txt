Q: Why are the variable names in log4sh so strange? There seems to be no rhyme
or reason to them.

A: Not all shells support the variable scoping that one would expect. All
variables are treated as global variables, which means that if a variable has a
value outside a function call, and then a function call changes the value, the
original value is not returned upon exiting the function. To get around this,
each function must have different variable names so that when one function
calls another, variables are not overwritten. Where things get especially hairy
is when any sort of recursion is needed, and as such, recursion is avoided in
log4sh. The best example of the described behavior is the default Bourne shell
of Solaris.

$Revision$

Test log4sh_setAlternative

Look into using xargs to execuate a command once per input word (-n 1) and such

Write test to check that the default pattern is properly set for a new appender

Move the checking and creation of file from appender_file_setFile() function to
activateOptions().

Provide function to clean up log4sh, and that clears the traps (the first is
there already)

- check return values from functions

- standardize all variable names

- write shlint
  + max 80 char lines
  + wrapped lines should start 4 chars in

- document the SMTPAppender

- implement line number conversion character (where possible)

- look into traps. exit codes seem to be lost

- DatedFileAppender
DatedFileAppender works in the same manner as the Tomcat FileLogger. Contrary
to DailyRollingFileAppender shipping with log4j, log file names generated by
DatedFileAppender always contain today's date. While this distinction seems
minor, it means you can reliably copy, compress, remove or manipulate a day's
log file shortly after midnight. With the DailyRollingFileAppender, a day's log
file is not renamed until the first message is logged some time after midnight.

- the logger command is now wrapped in a ( exec ) wrapper in case it isn't
  there. an error should be thrown at least the first time it was attempted to
  be used. same goes for mail and trap.

- implement file descriptor functions fdalloc and fdfree and replace the hard
  coded fd usage in the log4sh_readProperties and _appender_source functions

- validate that the return_test shell test works under cygwin and solaris. if
  so, remove the "unset" stuff before returns as they aren't needed

- make logger level's case insensitive??

- swap stdout and stderr
cmd 3>&1 1>&2 2>&3

- filter stdout and stderror
( ( cmd | ... process stdout ) 3>&1 1>&2 2>&3 ) | \
        ... process stderr 3>&1 1>&2 2>&3

- save stdout, stderr, and both to three files
((./program 2>&1 1>&3 | tee ~/err.txt) 3>&1 1>&2 | tee ~/out.txt) > ~/mix.txt 2>&1

- read from tcp port 13 (date/time)
read d < /dev/tcp/127.0.0.1/13
echo $d

* python like list indexing (see p31 in _Dive Into Python_)
>>> li
['a', 'b', 'new', 'mpilgrim', 'z', 'example', 'new', 'two', 'elements']
>>> li.index("example")
5
>>> li.index("new")
2
>>> li.index("c")
x not in list
>>> "c" in li
False

#
# infeasable
#

enable passing the configuration filename on the source line instead of requiring the LOG4SH_CONFIGURATION variable. -- this doesn't work because the arguments are not passed into the sourced code


$Revision$

